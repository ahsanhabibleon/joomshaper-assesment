{"ast":null,"code":"import _objectSpread from\"/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as actions from'../actions/actionTypes';var canvasPhotoReducer=function canvasPhotoReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actions.ADD_NEW_PHOTO_TO_CANVAS:return[].concat(_toConsumableArray(state),[{id:new Date().getTime(),imgSrc:action.payload.imgSrc,imgIndex:action.payload.imgIndex,filterSettings:{invert:'0',contrast:'100',brightness:'1',grayscale:'1'}}]);case actions.CHANGE_FILTER:return state.map(function(item,index){return action.payload.imgIndex===index?action.payload.filterType==='invert'?_objectSpread(_objectSpread({},item),{},{filterSettings:_objectSpread(_objectSpread({},item.filterSettings),{},{invert:action.payload.payload})}):action.payload.filterType==='contrast'?_objectSpread(_objectSpread({},item),{},{filterSettings:_objectSpread(_objectSpread({},item.filterSettings),{},{contrast:action.payload.payload})}):action.payload.filterType==='brightness'?_objectSpread(_objectSpread({},item),{},{filterSettings:_objectSpread(_objectSpread({},item.filterSettings),{},{brightness:action.payload.payload})}):action.payload.filterType==='grayscale'?_objectSpread(_objectSpread({},item),{},{filterSettings:_objectSpread(_objectSpread({},item.filterSettings),{},{grayscale:action.payload.payload})}):item:item;});case actions.REMOVE_PHOTO_FROM_CANVAS:return state.filter(function(photo){return photo.id!==action.payload.id;});case actions.REPLACE_IMG_SRC:return state.map(function(item){return item.imgSrc===action.payload.targetImgUrl?_objectSpread(_objectSpread({},item),{},{imgSrc:action.payload.srcImgUrl}):item;});default:return state;}};export default canvasPhotoReducer;","map":{"version":3,"sources":["/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/src/redux/reducers/addNewPhotoToCanvasReducer.js"],"names":["actions","canvasPhotoReducer","state","action","type","ADD_NEW_PHOTO_TO_CANVAS","id","Date","getTime","imgSrc","payload","imgIndex","filterSettings","invert","contrast","brightness","grayscale","CHANGE_FILTER","map","item","index","filterType","REMOVE_PHOTO_FROM_CANVAS","filter","photo","REPLACE_IMG_SRC","targetImgUrl","srcImgUrl"],"mappings":"2YAAA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,wBAAzB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CAC/C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKJ,CAAAA,OAAO,CAACK,uBAAb,CACI,mCACOH,KADP,GAEI,CACII,EAAE,CAAE,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EADR,CAEIC,MAAM,CAAEN,MAAM,CAACO,OAAP,CAAeD,MAF3B,CAGIE,QAAQ,CAAER,MAAM,CAACO,OAAP,CAAeC,QAH7B,CAIIC,cAAc,CAAE,CACZC,MAAM,CAAE,GADI,CAEZC,QAAQ,CAAE,KAFE,CAGZC,UAAU,CAAE,GAHA,CAIZC,SAAS,CAAE,GAJC,CAJpB,CAFJ,GAcJ,IAAKhB,CAAAA,OAAO,CAACiB,aAAb,CACI,MAAOf,CAAAA,KAAK,CAACgB,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,QACbjB,CAAAA,MAAM,CAACO,OAAP,CAAeC,QAAf,GAA4BS,KAA5B,CACIjB,MAAM,CAACO,OAAP,CAAeW,UAAf,GAA8B,QAA9B,gCACOF,IADP,MAEIP,cAAc,gCACPO,IAAI,CAACP,cADE,MAEVC,MAAM,CAAEV,MAAM,CAACO,OAAP,CAAeA,OAFb,EAFlB,GAMIP,MAAM,CAACO,OAAP,CAAeW,UAAf,GAA8B,UAA9B,gCACGF,IADH,MAEAP,cAAc,gCACPO,IAAI,CAACP,cADE,MAEVE,QAAQ,CAAEX,MAAM,CAACO,OAAP,CAAeA,OAFf,EAFd,GAMAP,MAAM,CAACO,OAAP,CAAeW,UAAf,GAA8B,YAA9B,gCACGF,IADH,MAEAP,cAAc,gCACPO,IAAI,CAACP,cADE,MAEVG,UAAU,CAAEZ,MAAM,CAACO,OAAP,CAAeA,OAFjB,EAFd,GAMAP,MAAM,CAACO,OAAP,CAAeW,UAAf,GAA8B,WAA9B,gCACGF,IADH,MAEAP,cAAc,gCACPO,IAAI,CAACP,cADE,MAEVI,SAAS,CAAEb,MAAM,CAACO,OAAP,CAAeA,OAFhB,EAFd,GAMAS,IAzBR,CA0BIA,IA3BS,EAAV,CAAP,CA8BJ,IAAKnB,CAAAA,OAAO,CAACsB,wBAAb,CACI,MAAOpB,CAAAA,KAAK,CAACqB,MAAN,CAAa,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAAClB,EAAN,GAAaH,MAAM,CAACO,OAAP,CAAeJ,EAAhC,EAAlB,CAAP,CAEJ,IAAKN,CAAAA,OAAO,CAACyB,eAAb,CACI,MAAOvB,CAAAA,KAAK,CAACgB,GAAN,CAAU,SAAAC,IAAI,QACjBA,CAAAA,IAAI,CAACV,MAAL,GAAgBN,MAAM,CAACO,OAAP,CAAegB,YAA/B,gCACOP,IADP,MAEIV,MAAM,CAAEN,MAAM,CAACO,OAAP,CAAeiB,SAF3B,GAGIR,IAJa,EAAd,CAAP,CAOJ,QACI,MAAOjB,CAAAA,KAAP,CA3DR,CA6DH,CA9DD,CAgEA,cAAeD,CAAAA,kBAAf","sourcesContent":["import * as actions from '../actions/actionTypes'\nconst canvasPhotoReducer = (state = [], action) => {\n    switch (action.type) {\n        case actions.ADD_NEW_PHOTO_TO_CANVAS:\n            return [\n                ...state,\n                {\n                    id: new Date().getTime(),\n                    imgSrc: action.payload.imgSrc,\n                    imgIndex: action.payload.imgIndex,\n                    filterSettings: {\n                        invert: '0',\n                        contrast: '100',\n                        brightness: '1',\n                        grayscale: '1'\n                    }\n                },\n            ]\n        case actions.CHANGE_FILTER:\n            return state.map((item, index) => (\n                action.payload.imgIndex === index ? (\n                    action.payload.filterType === 'invert' ? {\n                        ...item,\n                        filterSettings: {\n                            ...item.filterSettings,\n                            invert: action.payload.payload\n                        }\n                    } : action.payload.filterType === 'contrast' ? {\n                        ...item,\n                        filterSettings: {\n                            ...item.filterSettings,\n                            contrast: action.payload.payload\n                        }\n                    } : action.payload.filterType === 'brightness' ? {\n                        ...item,\n                        filterSettings: {\n                            ...item.filterSettings,\n                            brightness: action.payload.payload\n                        }\n                    } : action.payload.filterType === 'grayscale' ? {\n                        ...item,\n                        filterSettings: {\n                            ...item.filterSettings,\n                            grayscale: action.payload.payload\n                        }\n                    } : item\n                ) : item\n            ))\n\n        case actions.REMOVE_PHOTO_FROM_CANVAS:\n            return state.filter(photo => photo.id !== action.payload.id)\n\n        case actions.REPLACE_IMG_SRC:\n            return state.map(item => (\n                item.imgSrc === action.payload.targetImgUrl ? {\n                    ...item,\n                    imgSrc: action.payload.srcImgUrl\n                } : item\n            ))\n\n        default:\n            return state\n    }\n}\n\nexport default canvasPhotoReducer\n\n"]},"metadata":{},"sourceType":"module"}