{"ast":null,"code":"import * as actions from './actionTypes';\nimport axios from 'axios';\nexport const increment = payload => {\n  return {\n    type: actions.INCREMENT,\n    payload: payload\n  };\n};\nexport const decrement = payload => {\n  return {\n    type: actions.DECREMENT,\n    payload: payload\n  };\n};\nexport const setLoggedInStatus = () => {\n  return {\n    type: actions.SIGNED_IN\n  };\n};\nexport const addTodo = description => {\n  return {\n    type: actions.ADD_ITEM,\n    payload: {\n      description\n    }\n  };\n};\nexport const removeTodo = id => {\n  return {\n    type: actions.REMOVE_ITEM,\n    payload: {\n      id\n    }\n  };\n};\nexport const taskCompleted = id => {\n  return {\n    type: actions.TASK_COMPLETED,\n    payload: {\n      id\n    }\n  };\n};\nexport const fetchUsersRequest = () => {\n  return {\n    type: actions.FETCH_USERS_REQUEST\n  };\n};\nexport const fetchUsersSuccess = users => {\n  return {\n    type: actions.FETCH_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport const fetchUsersFailure = err => {\n  return {\n    type: actions.FETCH_USERS_FAILURE,\n    payload: err\n  };\n}; // export const fetchUsers = () => {\n//     return (dispatch) => {\n//         dispatch(fetchUsersRequest)\n//         axios.get('https://jsonplaceholder.typicode.com/users')\n//             .then(response => {\n//                 const users = response.data\n//                 // console.log(users)\n//                 dispatch(fetchUsersSuccess(users))\n//             })\n//             .catch(err => {\n//                 const errMessage = err.message\n//                 dispatch(fetchUsersFailure(errMessage))\n//             })\n//     }\n// }\n\nexport const fetchUsers = () => {\n  return dispatch => {\n    dispatch(fetchUsersRequest());\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      // response.data is the users\n      const users = response.data;\n      dispatch(fetchUsersSuccess(users));\n    }).catch(error => {\n      // error.message is the error message\n      dispatch(fetchUsersFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ahsan/Documents/Ahsan/projects/joomshaper-assesment-drag-and-drop/src/actions/index.js"],"names":["actions","axios","increment","payload","type","INCREMENT","decrement","DECREMENT","setLoggedInStatus","SIGNED_IN","addTodo","description","ADD_ITEM","removeTodo","id","REMOVE_ITEM","taskCompleted","TASK_COMPLETED","fetchUsersRequest","FETCH_USERS_REQUEST","fetchUsersSuccess","users","FETCH_USERS_SUCCESS","fetchUsersFailure","err","FETCH_USERS_FAILURE","fetchUsers","dispatch","get","then","response","data","catch","error","message"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,OAAO,CAACK,SADX;AAEHF,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,SAAS,GAAIH,OAAD,IAAa;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,OAAO,CAACO,SADX;AAEHJ,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMK,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHJ,IAAAA,IAAI,EAAEJ,OAAO,CAACS;AADX,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,OAAO,GAAIC,WAAD,IAAiB;AACpC,SAAO;AACHP,IAAAA,IAAI,EAAEJ,OAAO,CAACY,QADX;AAEHT,IAAAA,OAAO,EAAE;AACLQ,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAME,UAAU,GAAIC,EAAD,IAAQ;AAC9B,SAAO;AACHV,IAAAA,IAAI,EAAEJ,OAAO,CAACe,WADX;AAEHZ,IAAAA,OAAO,EAAE;AACLW,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAME,aAAa,GAAIF,EAAD,IAAQ;AACjC,SAAO;AACHV,IAAAA,IAAI,EAAEJ,OAAO,CAACiB,cADX;AAEHd,IAAAA,OAAO,EAAE;AACLW,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAMI,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHd,IAAAA,IAAI,EAAEJ,OAAO,CAACmB;AADX,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACtC,SAAO;AACHjB,IAAAA,IAAI,EAAEJ,OAAO,CAACsB,mBADX;AAEHnB,IAAAA,OAAO,EAAEkB;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,iBAAiB,GAAGC,GAAG,IAAI;AACpC,SAAO;AACHpB,IAAAA,IAAI,EAAEJ,OAAO,CAACyB,mBADX;AAEHtB,IAAAA,OAAO,EAAEqB;AAFN,GAAP;AAIH,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AACAjB,IAAAA,KAAK,CACA2B,GADL,CACS,4CADT,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd;AACA,YAAMT,KAAK,GAAGS,QAAQ,CAACC,IAAvB;AACAJ,MAAAA,QAAQ,CAACP,iBAAiB,CAACC,KAAD,CAAlB,CAAR;AACH,KANL,EAOKW,KAPL,CAOWC,KAAK,IAAI;AACZ;AACAN,MAAAA,QAAQ,CAACJ,iBAAiB,CAACU,KAAK,CAACC,OAAP,CAAlB,CAAR;AACH,KAVL;AAWH,GAbD;AAcH,CAfM","sourcesContent":["import * as actions from './actionTypes'\nimport axios from 'axios'\nexport const increment = (payload) => {\n    return {\n        type: actions.INCREMENT,\n        payload: payload\n    }\n}\nexport const decrement = (payload) => {\n    return {\n        type: actions.DECREMENT,\n        payload: payload\n    }\n}\nexport const setLoggedInStatus = () => {\n    return {\n        type: actions.SIGNED_IN\n    }\n}\n\nexport const addTodo = (description) => {\n    return {\n        type: actions.ADD_ITEM,\n        payload: {\n            description\n        }\n    }\n}\n\nexport const removeTodo = (id) => {\n    return {\n        type: actions.REMOVE_ITEM,\n        payload: {\n            id\n        }\n    }\n}\n\nexport const taskCompleted = (id) => {\n    return {\n        type: actions.TASK_COMPLETED,\n        payload: {\n            id\n        }\n    }\n}\n\nexport const fetchUsersRequest = () => {\n    return {\n        type: actions.FETCH_USERS_REQUEST\n    }\n}\nexport const fetchUsersSuccess = users => {\n    return {\n        type: actions.FETCH_USERS_SUCCESS,\n        payload: users\n    }\n}\n\nexport const fetchUsersFailure = err => {\n    return {\n        type: actions.FETCH_USERS_FAILURE,\n        payload: err\n    }\n}\n\n// export const fetchUsers = () => {\n//     return (dispatch) => {\n//         dispatch(fetchUsersRequest)\n//         axios.get('https://jsonplaceholder.typicode.com/users')\n//             .then(response => {\n//                 const users = response.data\n//                 // console.log(users)\n//                 dispatch(fetchUsersSuccess(users))\n//             })\n//             .catch(err => {\n//                 const errMessage = err.message\n//                 dispatch(fetchUsersFailure(errMessage))\n//             })\n//     }\n// }\n\nexport const fetchUsers = () => {\n    return (dispatch) => {\n        dispatch(fetchUsersRequest())\n        axios\n            .get('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                // response.data is the users\n                const users = response.data\n                dispatch(fetchUsersSuccess(users))\n            })\n            .catch(error => {\n                // error.message is the error message\n                dispatch(fetchUsersFailure(error.message))\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}