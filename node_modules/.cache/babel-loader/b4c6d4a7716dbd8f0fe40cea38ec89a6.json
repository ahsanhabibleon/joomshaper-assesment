{"ast":null,"code":"import * as actions from '../actions/actionTypes';\n\nconst Todos = (state = [], action) => {\n  switch (action.type) {\n    case actions.ADD_ITEM:\n      return [...state, {\n        id: new Date().getMilliseconds(),\n        description: action.payload.description,\n        isCompleted: false\n      }];\n\n    case actions.REMOVE_ITEM:\n      return state.filter(item => item.id !== action.payload.id);\n\n    case actions.TASK_COMPLETED:\n      return state.map(item => item.id !== action.payload.id ? item : { ...item,\n        isCompleted: true\n      });\n\n    default:\n      return state;\n  }\n};\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/ahsan/Documents/Ahsan/projects/joomshaper-assesment-drag-and-drop/src/reducers/todos.js"],"names":["actions","Todos","state","action","type","ADD_ITEM","id","Date","getMilliseconds","description","payload","isCompleted","REMOVE_ITEM","filter","item","TASK_COMPLETED","map"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;;AACA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,OAAO,CAACK,QAAb;AACI,aAAO,CACH,GAAGH,KADA,EAEH;AACII,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,eAAX,EADR;AAEIC,QAAAA,WAAW,EAAEN,MAAM,CAACO,OAAP,CAAeD,WAFhC;AAGIE,QAAAA,WAAW,EAAE;AAHjB,OAFG,CAAP;;AAQJ,SAAKX,OAAO,CAACY,WAAb;AACI,aAAOV,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYH,MAAM,CAACO,OAAP,CAAeJ,EAAhD,CAAP;;AAEJ,SAAKN,OAAO,CAACe,cAAb;AACI,aAAOb,KAAK,CAACc,GAAN,CAAUF,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYH,MAAM,CAACO,OAAP,CAAeJ,EAA3B,GAAgCQ,IAAhC,GAAuC,EAAE,GAAGA,IAAL;AAAWH,QAAAA,WAAW,EAAE;AAAxB,OAAzD,CAAP;;AAEJ;AACI,aAAOT,KAAP;AAjBR;AAmBH,CApBD;;KAAMD,K;AAsBN,eAAeA,KAAf","sourcesContent":["import * as actions from '../actions/actionTypes'\nconst Todos = (state = [], action) => {\n    switch (action.type) {\n        case actions.ADD_ITEM:\n            return [\n                ...state,\n                {\n                    id: new Date().getMilliseconds(),\n                    description: action.payload.description,\n                    isCompleted: false\n                }\n            ]\n        case actions.REMOVE_ITEM:\n            return state.filter(item => item.id !== action.payload.id)\n\n        case actions.TASK_COMPLETED:\n            return state.map(item => item.id !== action.payload.id ? item : { ...item, isCompleted: true })\n\n        default:\n            return state\n    }\n}\n\nexport default Todos"]},"metadata":{},"sourceType":"module"}