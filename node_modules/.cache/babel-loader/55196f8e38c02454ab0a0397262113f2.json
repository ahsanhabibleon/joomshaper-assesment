{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/src/components/Global/PhotoContainer/PhotoSettings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter, _handleChangePhoto } from '../../../redux/actions/addNewPhotoToCanvasActions';\nimport './PhotoSettings.scss';\n\nfunction PhotoSettings({\n  imgIndex,\n  imgSrc,\n  isModalOpen,\n  getModalStatus\n}) {\n  _s();\n\n  const [open, setOpen] = useState(isModalOpen);\n  const [activeTab, setActiveTab] = useState('changeImg');\n  const node = useRef();\n  const dispatch = useDispatch();\n  const canvasPhotos = useSelector(state => state.canvasPhotos);\n  useEffect(() => {\n    if (open) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [open]);\n\n  const handleChangePhoto = () => {\n    dispatch(_handleChangePhoto(true, imgSrc));\n  };\n\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n\n    setOpen(false);\n    getModalStatus(false);\n    dispatch(_handleChangePhoto(false, imgSrc));\n  };\n\n  const handleActiveTab = payload => {\n    setActiveTab(payload);\n  };\n\n  const changeSettings = (payload, filterType, imgIndex) => {\n    dispatch(changeFilter(payload, filterType, imgIndex));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoSettings\",\n    ref: node,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photoSettings__tabNav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'tabBtn' + (activeTab === 'changeImg' ? ' is-active' : ''),\n        onClick: () => handleActiveTab('changeImg'),\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'tabBtn' + (activeTab === 'filter' ? ' is-active' : ''),\n        onClick: () => handleActiveTab('filter'),\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photoSettings__tabPanel\",\n      children: [activeTab === 'changeImg' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photoSettings__tab__changeImg\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"photoSettings__imgThumb\",\n          src: imgSrc,\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"changeImgBtn\",\n          onClick: handleChangePhoto,\n          children: \"Change Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), activeTab === 'filter' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photoSettings__tab__changeFilter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"invert\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/img/invert.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"invert\",\n            onChange: e => changeSettings(e.target.value, 'invert', imgIndex),\n            value: canvasPhotos[imgIndex].filterSettings.invert,\n            min: \"0\",\n            max: \"100\",\n            step: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterVal\",\n            children: [canvasPhotos[imgIndex].filterSettings.invert, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contrast\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/img/contrast.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"contrast\",\n            onChange: e => changeSettings(e.target.value, 'contrast', imgIndex),\n            value: canvasPhotos[imgIndex].filterSettings.contrast,\n            min: \"0\",\n            max: \"500\",\n            step: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterVal\",\n            children: [canvasPhotos[imgIndex].filterSettings.contrast, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brightness\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/img/brightness.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"brightness\",\n            onChange: e => changeSettings(e.target.value, 'brightness', imgIndex),\n            value: canvasPhotos[imgIndex].filterSettings.brightness,\n            min: \"0\",\n            max: \"5\",\n            step: \"0.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterVal\",\n            children: [Math.floor(canvasPhotos[imgIndex].filterSettings.brightness * 100), \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"grayscale\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/img/grayscale.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"grayscale\",\n            onChange: e => changeSettings(e.target.value, 'grayscale', imgIndex),\n            value: canvasPhotos[imgIndex].filterSettings.grayscale,\n            min: \"0\",\n            max: \"100\",\n            step: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterVal\",\n            children: [canvasPhotos[imgIndex].filterSettings.grayscale, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PhotoSettings, \"JV0XS+3jIbvSm3s7ce2wc6ki3jI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PhotoSettings;\nexport default PhotoSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoSettings\");","map":{"version":3,"sources":["/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/src/components/Global/PhotoContainer/PhotoSettings.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","changeFilter","_handleChangePhoto","PhotoSettings","imgIndex","imgSrc","isModalOpen","getModalStatus","open","setOpen","activeTab","setActiveTab","node","dispatch","canvasPhotos","state","document","addEventListener","handleClickOutside","removeEventListener","handleChangePhoto","e","current","contains","target","handleActiveTab","payload","changeSettings","filterType","value","filterSettings","invert","contrast","brightness","Math","floor","grayscale"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { changeFilter, _handleChangePhoto } from '../../../redux/actions/addNewPhotoToCanvasActions'\nimport './PhotoSettings.scss'\n\nfunction PhotoSettings({ imgIndex, imgSrc, isModalOpen, getModalStatus }) {\n    const [open, setOpen] = useState(isModalOpen);\n    const [activeTab, setActiveTab] = useState('changeImg')\n    const node = useRef();\n    const dispatch = useDispatch();\n    const canvasPhotos = useSelector(state => state.canvasPhotos)\n\n    useEffect(() => {\n        if (open) {\n            document.addEventListener(\"mousedown\", handleClickOutside);\n        } else {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [open]);\n\n    const handleChangePhoto = () => {\n        dispatch(_handleChangePhoto(true, imgSrc))\n    }\n    const handleClickOutside = e => {\n        if (node.current.contains(e.target)) {\n            return;\n        }\n        setOpen(false);\n        getModalStatus(false);\n        dispatch(_handleChangePhoto(false, imgSrc))\n    };\n    const handleActiveTab = (payload) => {\n        setActiveTab(payload)\n    }\n    const changeSettings = (payload, filterType, imgIndex) => {\n        dispatch(changeFilter(payload, filterType, imgIndex))\n    }\n\n    return (\n        <div className=\"photoSettings\" ref={node}>\n            <div className=\"photoSettings__tabNav\">\n                <button className={'tabBtn' + (activeTab === 'changeImg' ? ' is-active' : '')} onClick={() => handleActiveTab('changeImg')}>Image</button>\n                <button className={'tabBtn' + (activeTab === 'filter' ? ' is-active' : '')} onClick={() => handleActiveTab('filter')}>Filter</button>\n            </div>\n            <div className=\"photoSettings__tabPanel\">\n                {activeTab === 'changeImg' && (\n                    <div className=\"photoSettings__tab__changeImg\">\n                        <img className=\"photoSettings__imgThumb\" src={imgSrc} alt=\"...\" />\n                        <button className=\"changeImgBtn\" onClick={handleChangePhoto}>Change Photo</button>\n                    </div>\n                )}\n\n                {activeTab === 'filter' && (\n                    <div className=\"photoSettings__tab__changeFilter\">\n                        <div className=\"filter\">\n                            <label htmlFor=\"invert\"><img src=\"/img/invert.svg\" alt=\"\" /></label>\n                            <input type=\"range\" id=\"invert\" onChange={(e) => changeSettings(e.target.value, 'invert', imgIndex)} value={canvasPhotos[imgIndex].filterSettings.invert} min=\"0\" max=\"100\" step=\"1\" />\n                            <div className=\"filterVal\">\n                                {canvasPhotos[imgIndex].filterSettings.invert} %\n                            </div>\n                        </div>\n\n                        <div className=\"filter\">\n                            <label htmlFor=\"contrast\"><img src=\"/img/contrast.svg\" alt=\"\" /></label>\n                            <input type=\"range\" id=\"contrast\" onChange={(e) => changeSettings(e.target.value, 'contrast', imgIndex)} value={canvasPhotos[imgIndex].filterSettings.contrast} min=\"0\" max=\"500\" step=\"1\" />\n                            <div className=\"filterVal\">\n                                {canvasPhotos[imgIndex].filterSettings.contrast} %\n                            </div>\n                        </div>\n\n                        <div className=\"filter\">\n                            <label htmlFor=\"brightness\"><img src=\"/img/brightness.svg\" alt=\"\" /></label>\n                            <input type=\"range\" id=\"brightness\" onChange={(e) => changeSettings(e.target.value, 'brightness', imgIndex)} value={canvasPhotos[imgIndex].filterSettings.brightness} min=\"0\" max=\"5\" step=\"0.01\" />\n                            <div className=\"filterVal\">\n                                {Math.floor(canvasPhotos[imgIndex].filterSettings.brightness * 100)} %\n                            </div>\n                        </div>\n\n                        <div className=\"filter\">\n                            <label htmlFor=\"grayscale\"><img src=\"/img/grayscale.svg\" alt=\"\" /></label>\n                            <input type=\"range\" id=\"grayscale\" onChange={(e) => changeSettings(e.target.value, 'grayscale', imgIndex)} value={canvasPhotos[imgIndex].filterSettings.grayscale} min=\"0\" max=\"100\" step=\"1\" />\n                            <div className=\"filterVal\">\n                                {canvasPhotos[imgIndex].filterSettings.grayscale} %\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default PhotoSettings\n"]},"metadata":{},"sourceType":"module"}