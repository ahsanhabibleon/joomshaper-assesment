{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/src/components/Global/PhotoBox/PhotoBox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { addNewPhotoToCanvas } from '../../../redux/actions/addNewPhotoToCanvasActions';\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from '../../../itemTypes';\nimport { useDispatch } from 'react-redux';\nimport './PhotoBox.scss';\n\nconst Box = ({\n  name,\n  imgSrc,\n  imgIndex,\n  imgAlt\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      name,\n      type: ItemTypes.BOX\n    },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        dispatch(addNewPhotoToCanvas(imgSrc, imgIndex));\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoSingle\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: drag,\n      className: \"boxDraggable\" + (isDragging ? ' is-dragging' : ''),\n      children: /*#__PURE__*/_jsxDEV(\"figure\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgSrc,\n          alt: imgAlt,\n          width: \"280\",\n          height: \"400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Box, \"d1AVviKppl3Jm9EYv+8eKzKa0Cg=\", false, function () {\n  return [useDispatch, useDrag];\n});\n\n_c = Box;\nexport default Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/src/components/Global/PhotoBox/PhotoBox.js"],"names":["React","addNewPhotoToCanvas","useDrag","ItemTypes","useDispatch","Box","name","imgSrc","imgIndex","imgAlt","dispatch","isDragging","drag","item","type","BOX","end","monitor","dropResult","getDropResult","collect"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,mDAApC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,iBAAP;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA;AAA1B,CAAD,KAAwC;AAAA;;AAChD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAAC;AAAEO,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBV,OAAO,CAAC;AACnCW,IAAAA,IAAI,EAAE;AAAEP,MAAAA,IAAF;AAAQQ,MAAAA,IAAI,EAAEX,SAAS,CAACY;AAAxB,KAD6B;AAEnCC,IAAAA,GAAG,EAAE,CAACH,IAAD,EAAOI,OAAP,KAAmB;AACpB,YAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;;AACA,UAAIN,IAAI,IAAIK,UAAZ,EAAwB;AACpBR,QAAAA,QAAQ,CAACT,mBAAmB,CAACM,MAAD,EAASC,QAAT,CAApB,CAAR;AACH;AACJ,KAPkC;AAQnCY,IAAAA,OAAO,EAAGH,OAAD,KAAc;AACnBN,MAAAA,UAAU,EAAEM,OAAO,CAACN,UAAR;AADO,KAAd;AAR0B,GAAD,CAAtC;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAE,kBAAkBD,UAAU,GAAG,cAAH,GAAoB,EAAhD,CAA3B;AAAA,6BACI;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEJ,MAAV;AAAkB,UAAA,GAAG,EAAEE,MAAvB;AAA+B,UAAA,KAAK,EAAC,KAArC;AAA2C,UAAA,MAAM,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAzBD;;GAAMJ,G;UACeD,W,EAEcF,O;;;KAH7BG,G;AA2BN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { addNewPhotoToCanvas } from '../../../redux/actions/addNewPhotoToCanvasActions'\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from '../../../itemTypes';\nimport { useDispatch } from 'react-redux'\nimport './PhotoBox.scss'\n\nconst Box = ({ name, imgSrc, imgIndex, imgAlt }) => {\n    const dispatch = useDispatch()\n\n    const [{ isDragging }, drag] = useDrag({\n        item: { name, type: ItemTypes.BOX },\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                dispatch(addNewPhotoToCanvas(imgSrc, imgIndex))\n            }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    return (\n        <div className=\"photoSingle\">\n            <div ref={drag} className={\"boxDraggable\" + (isDragging ? ' is-dragging' : '')}>\n                <figure>\n                    <img src={imgSrc} alt={imgAlt} width=\"280\" height=\"400\" />\n                </figure>\n            </div>\n        </div>\n    );\n};\n\nexport default Box\n"]},"metadata":{},"sourceType":"module"}