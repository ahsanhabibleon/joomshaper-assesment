{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ahsan/Documents/Ahsan/projects/joomshaper-assesment-drag-and-drop/src/components/Users/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../../actions';\n\nfunction Users({\n  userData,\n  fetchUsers\n}) {\n  _s();\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && userData.users && userData.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 17\n  }, this);\n}\n\n_s(Users, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Users;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/ahsan/Documents/Ahsan/projects/joomshaper-assesment-drag-and-drop/src/components/Users/Users.js"],"names":["React","useState","useEffect","connect","fetchUsers","Users","userData","loading","error","users","map","user","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAf,EAAyC;AAAA;;AACrCF,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOE,QAAQ,CAACC,OAAT,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,GAEHD,QAAQ,CAACE,KAAT,gBACA;AAAA,cAAKF,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,UADA,gBAGQ;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKF,QAAQ,IAAIA,QAAQ,CAACG,KAArB,IAA8BH,QAAQ,CAACI,GAAT,CAAaC,IAAI,iBAC5C;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cAD2B;AADnC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UALZ;AAcH;;GAlBQP,K;;KAAAA,K;;AAoBT,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACH;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHZ,IAAAA,UAAU,EAAE,MAAMY,QAAQ,CAACZ,UAAU,EAAX;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAClBU,eADkB,EAElBE,kBAFkB,CAAP,CAGbV,KAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../../actions'\n\nfunction Users({ userData, fetchUsers }) {\n    useEffect(() => {\n        fetchUsers()\n    }, [])\n    return userData.loading ? (\n        <h2>Loading</h2>\n    ) : userData.error ? (\n        <h2>{userData.error}</h2>\n    ) : (\n                <div>\n                    <h2>User list</h2>\n                    <div>\n                        {userData && userData.users && userData.map(user => (\n                            <p>{user.name}</p>\n                        ))}\n                    </div>\n                </div>\n            )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUsers: () => dispatch(fetchUsers())\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Users)\n\n"]},"metadata":{},"sourceType":"module"}