{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/src/components/Global/PhotoBuffet/PhotoBuffet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { connect } from 'react-redux';\nimport { fetchPhotos } from '../../../redux/actions/photoActions';\nimport PhotoBox from '../PhotoBox/PhotoBox';\nimport { replaceImgSrc, _handleChangePhoto } from '../../../redux/actions/addNewPhotoToCanvasActions';\nimport \"./PhotoBuffet.scss\";\n\nfunction PhotoBuffet({\n  galleryPhotos,\n  fetchPhotos\n}) {\n  _s();\n\n  const photoBuffetRef = useRef();\n  const dispatch = useDispatch();\n  const changePhotoOption = useSelector(state => state.changePhotoOption);\n  useEffect(() => {\n    addEventListenerToBuffet();\n  }, [changePhotoOption]);\n  useEffect(() => {\n    fetchPhotos();\n  }, []);\n\n  const addChangePhotoEventListener = e => {\n    dispatch(replaceImgSrc(changePhotoOption.imgSrc, e.target.src));\n    dispatch(_handleChangePhoto(false, changePhotoOption.imgSrc));\n  };\n\n  const addEventListenerToBuffet = () => {\n    changePhotoOption.status === true ? photoBuffetRef.current.addEventListener('click', addChangePhotoEventListener) : photoBuffetRef.current.removeEventListener('click', addChangePhotoEventListener);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photoBuffet\",\n    ref: photoBuffetRef,\n    children: galleryPhotos.photos.map(photo => /*#__PURE__*/_jsxDEV(PhotoBox, {\n      name: \"Glass\",\n      imgSrc: photo.img,\n      imgAlt: photo.name,\n      imgId: photo.char_id,\n      imgIndex: photo.char_id - 1\n    }, photo.char_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n\n_s(PhotoBuffet, \"ekufH1hOV+TsLko05XbCvA2gSCk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PhotoBuffet;\n\nconst mapStateToProps = state => {\n  return {\n    galleryPhotos: state.photos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPhotos: () => dispatch(fetchPhotos())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhotoBuffet);\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoBuffet\");","map":{"version":3,"sources":["/Users/ahsan/Documents/Ahsan/projects/react-photo-gallery-with-photo-filter/src/components/Global/PhotoBuffet/PhotoBuffet.js"],"names":["React","useEffect","useRef","useSelector","useDispatch","connect","fetchPhotos","PhotoBox","replaceImgSrc","_handleChangePhoto","PhotoBuffet","galleryPhotos","photoBuffetRef","dispatch","changePhotoOption","state","addEventListenerToBuffet","addChangePhotoEventListener","e","imgSrc","target","src","status","current","addEventListener","removeEventListener","photos","map","photo","img","name","char_id","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,mDAAlD;AACA,OAAO,oBAAP;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,aAAF;AAAiBL,EAAAA;AAAjB,CAArB,EAAqD;AAAA;;AACjD,QAAMM,cAAc,GAAGV,MAAM,EAA7B;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,iBAAiB,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,iBAAhB,CAArC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,wBAAwB;AAC3B,GAFQ,EAEN,CAACF,iBAAD,CAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,2BAA2B,GAAIC,CAAD,IAAO;AACvCL,IAAAA,QAAQ,CAACL,aAAa,CAACM,iBAAiB,CAACK,MAAnB,EAA2BD,CAAC,CAACE,MAAF,CAASC,GAApC,CAAd,CAAR;AACAR,IAAAA,QAAQ,CAACJ,kBAAkB,CAAC,KAAD,EAAQK,iBAAiB,CAACK,MAA1B,CAAnB,CAAR;AACH,GAHD;;AAIA,QAAMH,wBAAwB,GAAG,MAAM;AACnCF,IAAAA,iBAAiB,CAACQ,MAAlB,KAA6B,IAA7B,GACIV,cAAc,CAACW,OAAf,CAAuBC,gBAAvB,CAAwC,OAAxC,EAAiDP,2BAAjD,CADJ,GAGQL,cAAc,CAACW,OAAf,CAAuBE,mBAAvB,CAA2C,OAA3C,EAAoDR,2BAApD,CAHR;AAKH,GAND;;AAQA,sBAAO;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAEL,cAAlC;AAAA,cACFD,aAAa,CAACe,MAAd,CAAqBC,GAArB,CAAyBC,KAAK,iBAC3B,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAA2C,MAAA,MAAM,EAAEA,KAAK,CAACC,GAAzD;AAA8D,MAAA,MAAM,EAAED,KAAK,CAACE,IAA5E;AAAkF,MAAA,KAAK,EAAEF,KAAK,CAACG,OAA/F;AAAwG,MAAA,QAAQ,EAAEH,KAAK,CAACG,OAAN,GAAgB;AAAlI,OAA4BH,KAAK,CAACG,OAAlC;AAAA;AAAA;AAAA;AAAA,YADH;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;;GA9BQrB,W;UAEYN,W,EACSD,W;;;KAHrBO,W;;AAgCT,MAAMsB,eAAe,GAAGjB,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,aAAa,EAAEI,KAAK,CAACW;AADlB,GAAP;AAGH,CAJD;;AAKA,MAAMO,kBAAkB,GAAGpB,QAAQ,IAAI;AACnC,SAAO;AACHP,IAAAA,WAAW,EAAE,MAAMO,QAAQ,CAACP,WAAW,EAAZ;AADxB,GAAP;AAGH,CAJD;;AAKA,eAAeD,OAAO,CAClB2B,eADkB,EAElBC,kBAFkB,CAAP,CAGbvB,WAHa,CAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { connect } from 'react-redux'\nimport { fetchPhotos } from '../../../redux/actions/photoActions'\nimport PhotoBox from '../PhotoBox/PhotoBox'\nimport { replaceImgSrc, _handleChangePhoto } from '../../../redux/actions/addNewPhotoToCanvasActions'\nimport \"./PhotoBuffet.scss\"\n\nfunction PhotoBuffet({ galleryPhotos, fetchPhotos }) {\n    const photoBuffetRef = useRef()\n    const dispatch = useDispatch()\n    const changePhotoOption = useSelector(state => state.changePhotoOption)\n\n    useEffect(() => {\n        addEventListenerToBuffet()\n    }, [changePhotoOption])\n\n    useEffect(() => {\n        fetchPhotos()\n    }, [])\n\n    const addChangePhotoEventListener = (e) => {\n        dispatch(replaceImgSrc(changePhotoOption.imgSrc, e.target.src))\n        dispatch(_handleChangePhoto(false, changePhotoOption.imgSrc))\n    }\n    const addEventListenerToBuffet = () => {\n        changePhotoOption.status === true ? (\n            photoBuffetRef.current.addEventListener('click', addChangePhotoEventListener)\n        ) : (\n                photoBuffetRef.current.removeEventListener('click', addChangePhotoEventListener)\n            )\n    }\n\n    return <div className=\"photoBuffet\" ref={photoBuffetRef}>\n        {galleryPhotos.photos.map(photo => (\n            <PhotoBox name=\"Glass\" key={photo.char_id} imgSrc={photo.img} imgAlt={photo.name} imgId={photo.char_id} imgIndex={photo.char_id - 1} />\n        ))}\n    </div>\n}\n\nconst mapStateToProps = state => {\n    return {\n        galleryPhotos: state.photos\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchPhotos: () => dispatch(fetchPhotos())\n    }\n}\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PhotoBuffet)\n"]},"metadata":{},"sourceType":"module"}